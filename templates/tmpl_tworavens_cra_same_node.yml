# ---------------------------------------------------------
# Kubernetes file for TA3-TA2 - TwoRavens and ISI
# ---------------------------------------------------------
---
# Service for Nginx
apiVersion: v1
kind: Service
metadata:
  name: {{ eval_id }}
  labels:
    evalId: {{ eval_id }}
spec:
  # NodePort type allows to expose service outside the cluster
  type: NodePort
  selector:
    evalId: {{ eval_id }}
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ eval_id }}
  labels:
    evalId: {{ eval_id }}
    main: "yes"
    ta3-main: "yes"
    ta2-main: "yes"
spec:
  restartPolicy: Never
  volumes:
    # TA3 specification 'shared-vol' volume mount
    # (this is now added by the NIST script)
    # Additional Volume mounted for TwoRavens sharing
    - name: "ravens-volume"
      {% if IS_DEPLOY %}emptyDir: {}{% else %}hostPath:
        path: "/Users/ramanprasad/Documents/github-rp/TwoRavens/ravens_volume"{% endif %}
  containers:
    # -------------------------
    # TA3 - Ravens nginx - reverse proxy for ta3-main
    # -------------------------
    - name: ravens-nginx
      image: {{ ravens_nginx_image }}
      ports:
        - containerPort: 80
          name: http
          protocol: TCP
      env:
        # NIST eval id
        - name: EVAL_ID
          value: {{ eval_id }}
    # -------------------------
    # TA3 Main - TwoRavens
    # -------------------------
    - name: ta3-main
      image: {{ tworavens_image }}
      # current tworavens has a mount at /ravens_volume
      volumeMounts: {{ RAVENS_CRA_VOLUME_MOUNTS }}
      # web port
      ports:
        - containerPort: 8080
          name: http
          protocol: TCP
      # environment variables passed to container
      env:
        # NIST eval id
        - name: EVAL_ID
          value: {{ eval_id }}
        # Turn off test mode
        - name: TA2_STATIC_TEST_MODE
          value: "False"
        # Reference to the gRPC server using the pod name and TA2 port
        - name: TA2_TEST_SERVER_URL
          value: "{{ eval_id }}:50051"
        # Url to TA3 R/rook web service
        - name: R_DEV_SERVER_BASE
          value: "http://localhost:8000/custom/"
      # liveness is for restart
      livenessProbe:
        httpGet:
          path: /monitoring/alive
          port: 8080
        initialDelaySeconds: 5
        timeoutSeconds: 1
        periodSeconds: 10
        failureThreshold: 3
      # readiness: ready for traffic
      readinessProbe:
        httpGet:
          path: /monitoring/alive
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 10
    # -------------------------
    # ROOK CONTAINER SPECS
    # -------------------------
    - name: rook
      image: {{ rook_image }}
      # same mounts as ta3-main and ta2-main
      volumeMounts: {{ RAVENS_CRA_VOLUME_MOUNTS }}
      # web port
      ports:
        - containerPort: 8000
          name: http
          protocol: TCP
      # environment variables passed to container
      env:
        # NIST eval id
        - name: EVAL_ID
          value: {{ eval_id }}
        # Also set to "yes" in the Dockefile
        - name: ROOK_USE_PRODUCTION_MODE
          value: "yes"
      # liveness is for restart
      livenessProbe:
        httpGet:
          path: /custom/healthcheckapp
          port: 8000
        initialDelaySeconds: 5
        timeoutSeconds: 1
        periodSeconds: 10
        failureThreshold: 3
      # readiness: ready for traffic
      readinessProbe:
        httpGet:
          path: /custom/healthcheckapp
          port: 8000
        initialDelaySeconds: 20
        periodSeconds: 10
    # -------------------------
    # TA2 CONTAINER
    # -------------------------
    - name: ta2-main
      image: {{ TA2_IMAGE_NAME }}
      # environment variables passed to container
      env:
        # NIST eval id
        - name: EVAL_ID
          value: {{ eval_id }}
      ports:
        # gRPC port
        - containerPort: 50051
          protocol: TCP
      volumeMounts: {{ RAVENS_CRA_VOLUME_MOUNTS }}
